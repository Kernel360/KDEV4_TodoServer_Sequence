Unittest 란
- 함수나 메서드 등의 단위를 테스트 하는 것
- 개발자가 작성한 코드가 기대한 대로 동작하는 지를 확인하고 버그를 찾는 작업
- 단위 테스트의 목적은 개발자가 작성 한 코드를 검증해서 버그를 찾아내고 코드의 품질 향상 시키는 것
- 단위 테스트를 통해서 코드의 유지 보수성을 높일 수 있고 재 사용성도 높아질 수 있다

Unittest 잘하기
- 독립적일 것 : 데이터베이스나 네트워크 환경으로부터(실행 환경으로부터) 독립적으로 실행될 수 있는지 여부
              테스트 코드 간에도 의존성이 존재할 수 있음( 예를 들면 특정 테스트 코드가 실행된 후에  실행시켜야 성공하고 그 반대의 순서로 실행 시키면 테스트가 실패하는 경우 ) => 좋은 테스트 코드 X
              어느 순서로 코드를 실행 시키든지 간에 동일한 결과가 보장될 수 있어야 한다
- 명확할 것 : 비즈니스 로직부터 명확하게 기능을 담당하고 있는지 점검 해보기
            테스트 코드는 내가 테스트 하고자 하는 기능을 명확하게 표현해서 테스트의 의도를 분명하게 전달할 수 있어야 함
- 의미 있는 커버리지 수준 : 테스트 코드의 커버리지는 소프트웨어 코드에서 얼마나 많은 부분을 테스트 하고 있는지를 나타내기 위한 지표로 사용된다
                        커버리지가 높을수록 소프트웨어 코드에서 더 많은 범위에 대해서 테스트가 작성되고 있는 상황이다


Junit5
- 자바를 위한 유닛 테스트 프레임워크
- 자동화된 테스트 실행 및 결과 분석 제공


 testImplementation 'org.springframework.boot:spring-boot-starter-test'
 - 이 의존성은 springboot test starter 를 포함해서 Mock mvc 를 사용하기 위한 spring test 모듈을 제공해줍니다
 - 이 의존성을 추가를 해 주면 Mock mvc 객체를 생성 해 줄수 있고 Mock mvc 라는 것은 Spring mvc 테스트 프레임워크 라고 보면 된다
 - http 요청이나 응답을 테스트 하기 위해 사용을 할 수 있다