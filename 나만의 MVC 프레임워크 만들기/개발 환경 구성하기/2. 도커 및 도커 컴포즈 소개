도커
- 컨테이너 기반의 가상화 플랫폼
- 컨테이너 기반의 가상화 vs 하이퍼바이저 기반의 가상화(OS 가상화)

[ 하이퍼바이저 기반의 가상화 ]
- 호스트는 물리서버를 의미, 게스트는 가상서버를 의미
- 그리고 호스트와 게스트를 연결해주는 중간에 하이퍼바이저라는 역할이 있다.
- 하이퍼바이저는 서버 가상화 기술로써 호스트 서버에 설치되고 호스트와 게스트를 나누는 역할을 하며
  각각의 게스트는 하이퍼바이저에 의해 관리되며 시스템 자원을 할당받게 된다.
- 하이퍼바이저 기반의 가상화는 격리된 환경에서 또 하나의 가상 서버를 실행하는 기술 이라 생각하면 됨
- 게스트 OS 로는 다양한 OS 선택이 가능하며 게스트 OS 에서 실행되는 애플리케이션이 호스트 자원을 사용하기 위해서는
  반드시 게스트 OS를 거쳐야 함 그렇기 때문에 아무래도 속도적인 측면에서 느림

[ 컨테이너 기반의 가상화 ]
- 컨테이너 기반의 가상화는 격리된 환경에서 프로세스를 실행하는 기술이라고 생각하면 쉽다
- 애플리케이션은 도커 엔진을 통해 호스트 자원을 사용할 수 있고 구조적으로 게스트 OS 가 없기 때문에 용량도 매우 가벼움

도커 허브
- 도커에서 제공하는 이미지 저장소

도커 컴포즈
- 다중 컨테이너를 정의하고 실행하기 위한 도구
- 여러 개의 프로세스, MySQL 이라던가 웹서버라던가 카프카라던가 이러한 여러 개의 프로세스를
  하나의 파일로 정리해서 동시에 실행하기 위한 도구라 보면 됨
- YAML 파일을 사용하여 다중 컨테이너를 구성함

도커 허브에서 MYSQL 이미지 다운로드

MYSQL 도커 컨테이너 생성 및 실행
- docker run --name mysql-sample-container -e MYSQL_ROOT_PASSWORD=<password> -d -p 3306:3306 mysql:latest
- docker run : 토커를 실행한다는 명령어,  mysql-sample-container : 해당 컨테이너명, MYSQL_ROOT_PASSWORD=test,
  3306:3306 : 3306 포트로 연결하겠다,  mysql:latest : 최근 이미지 사용하겠다

현재 실행중인 도커 컨테이너 목록 출력
- docker ps -a

MYSQL 도커 컨테이너 접속
- docker exec -it {도커 컨테이너 이름} bash

MYSQL 접속
- mysql -u root -p
--